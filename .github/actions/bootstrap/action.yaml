name: "Bootstrap"

description: "Bootstrap all tools and dependencies"
inputs:
  go-version:
    description: "Go version to install"
    required: true
    default: "1.23.x"
  go-dependencies:
    description: "Download go dependencies"
    required: true
    default: "true"
  cache-key-prefix:
    description: "Prefix all cache keys with this value"
    required: true
    default: "181053ac82"
  bootstrap-apt-packages:
    description: "Space delimited list of tools to install via apt"
    default: ""

runs:
  using: "composite"
  steps:
    # note: go mod and build is automatically cached on default with v4+
    - uses: actions/setup-go@cdcb36043654635271a94b9a6d1392de5bb323a7 # v5.0.1
      if: inputs.go-version != ''
      with:
        go-version: ${{ inputs.go-version }}

    - name: Restore tool cache
      id: tool-cache
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
      with:
        path: ${{ github.workspace }}/.tool
        key: ${{ inputs.cache-key-prefix }}-${{ runner.os }}-tool-${{ hashFiles('.binny.yaml') }}

    - name: Install project tools
      shell: bash
      run: make tools

    - name: Install apt packages
      if: inputs.bootstrap-apt-packages != ''
      shell: bash
      env:
        APT_PACKAGES: ${{ inputs.bootstrap-apt-packages }}
      run: |
        # Convert space-separated string to bash array for safe handling
        read -ra packages <<< "$APT_PACKAGES"
        if [ ${#packages[@]} -gt 0 ]; then
          DEBIAN_FRONTEND=noninteractive sudo apt update && sudo -E apt install -y "${packages[@]}"
        fi
